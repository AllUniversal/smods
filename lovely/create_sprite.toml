[manifest]
version = "1.0.0"
dump_lua = true
priority = -5


### Sprite/AnimatedSprite or G.ASSET_ATLAS/ANIMATION_ATLAS -> SMODS.create_sprite() 

# Case: ..ATLAS[]
# Blind:init()
[[patches]]
[patches.pattern]
target = 'blind.lua'
pattern = '''
    self.children.animatedSprite = AnimatedSprite(self.T.x, self.T.y, self.T.w, self.T.h, G.ANIMATION_ATLAS['blind_chips'], G.P_BLINDS.bl_small.pos)
'''
position = 'at'
payload = '''
self.children.animatedSprite = SMODS.create_sprite(self.T.x, self.T.y, self.T.w, self.T.h, 'blind_chips', G.P_BLINDS.bl_small.pos)
'''
match_indent = true
# game.lua
[[patches]] 
[patches.regex]
target = 'game.lua'
pattern = '(?<start>[\t ].*)Sprite\((?<pre>.*)(?:G\.ASSET_ATLAS\[|G\.ANIMATION_ATLAS\[)(?<key>.*)\],(?<rest>.*)'
position = 'at'
payload = '''
$start SMODS.create_sprite($pre $key, $rest 
'''
# Tag:generate_UI()
[[patches]]
[patches.pattern]
target = 'tag.lua' 
pattern = '''
    local tag_sprite = Sprite(0,0,_size*1,_size*1,G.ASSET_ATLAS["tags"], (self.hide_ability) and G.tag_undiscovered.pos or self.pos)
'''
position = 'at'
payload = '''
local tag_sprite = SMODS.create_sprite(0, 0, _size*1, _size*1, "tags", (self.hide_ability) and G.tag_undiscovered.pos or self.pos)
'''
match_indent = true
# functions/button_callbacks.lua : G.FUNC.flame_handler()
[[patches]]
[patches.pattern]
target = 'functions/button_callbacks.lua' 
pattern = '''
      if not e.config.object:is(Sprite) or e.config.object.ID ~= v.ID then 
        e.config.object:remove()
        e.config.object = Sprite(0, 0, 2.5, 2.5, G.ASSET_ATLAS["ui_1"], {x = 2, y = 0})
'''
position = 'at'
payload = '''
if (not e.config.object:is(Sprite) and not e.config.object:is(AnimatedSprite)) or e.config.object.ID ~= v.ID then 
  e.config.object:remove()
  e.config.object = SMODS.create_sprite(0, 0, 2.5, 2.5, "ui_1", {x = 2, y = 0})
'''
match_indent = true
# functions/common_events.lua
[[patches]] 
[patches.regex]
target = 'functions/common_events.lua'
pattern = '(?<start>[\t ].*)Sprite\((?<pre>.*)(?:G\.ASSET_ATLAS\[|G\.ANIMATION_ATLAS\[)(?<key>.*)\],(?<rest>.*)'
position = 'at'
payload = '''
$start SMODS.create_sprite($pre $key, $rest 
'''
# functions/UI_definitions.lua 
[[patches]]
[patches.regex]
target = 'functions/UI_definitions.lua'
pattern = '(?<start>[\t ].*)Sprite\((?<pre>.*)(?:G\.ASSET_ATLAS\[|G\.ANIMATION_ATLAS\[)(?<key>.*)\],(?<rest>.*)'
position = 'at'
payload = '''
$start SMODS.create_sprite($pre $key, $rest 
'''